# -*- coding: utf-8 -*-
"""JT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19yuyP8aRYNq-p5YpoP1dca9MTg_7c2UH
"""

import pandas as pd
import csv

def filter_by_region(file_path):
    columns_to_read = ['상권업종대분류명', '상권업종중분류명', '상권업종소분류명', '시도명']
    return pd.read_csv(file_path, encoding='utf-8', usecols=columns_to_read, on_bad_lines='skip').query('시도명 == "경기도"')

file_paths = {
    '2019': '/content/소상공인시장진흥공단_상가업소정보_201906_03.csv',  # 2019년 데이터 경로
    '2021': '/content/소상공인시장진흥공단_상가(상권)정보_경기_202106.csv',   # 2021년 데이터 경로
    '2024': '/content/소상공인시장진흥공단_상가(상권)정보_경기_202409.csv'   # 2024년 데이터 경로
}

filtered_data = {year: filter_by_region(file_path) for year, file_path in file_paths.items()}

for year, data in filtered_data.items():
    print(f"{year}년 데이터 통계량:\n", data.describe())

from sklearn.cluster import KMeans

#2019 데이터 분석
summary = filtered_data['2019'].groupby(['상권업종대분류명', '시도명']).size().unstack(fill_value=0)
kmeans = KMeans(n_clusters=3, random_state=42)
clusters = kmeans.fit_predict(summary)
summary['Cluster'] = clusters
print(summary)

import pandas as pd

def filter_by_region_and_category(file_path, category_name):
    columns_to_read = ['상권업종대분류명', '상권업종중분류명', '상권업종소분류명', '시도명']
    return pd.read_csv(file_path, encoding='utf-8', usecols=columns_to_read, on_bad_lines='skip').query('시도명 == "경기도" and 상권업종대분류명 == @category_name')

# 파일 경로 정의
file_paths = {
    '2019': '/content/소상공인시장진흥공단_상가업소정보_201906_03.csv',  # 2019년 데이터 경로
    '2021': '/content/소상공인시장진흥공단_상가(상권)정보_경기_202106.csv',   # 2021년 데이터 경로
    '2024': '/content/소상공인시장진흥공단_상가(상권)정보_경기_202409.csv'   # 2024년 데이터 경로
}

# '음식' 대분류로 필터링
category_name = '음식'
filtered_data = {year: filter_by_region_and_category(file_path, category_name) for year, file_path in file_paths.items()}

# 결과 확인
for year, data in filtered_data.items():
    print(f"{year}년 '음식' 데이터:\n", data.head(), "\n")

for year, data in filtered_data.items():
    print(f"{year}년 '음식' 업종 데이터 개수: {len(data)}")

from scipy.stats import norm
import numpy as np

def z_test(mean1, mean2, std1, std2, n1, n2):
    z = (mean1 - mean2) / np.sqrt((std1**2 / n1) + (std2**2 / n2))
    p_value = 2 * (1 - norm.cdf(abs(z)))  # 양측 검정
    return z, p_value

# 연도별 데이터 통계 계산
z_test_results = {}
for (year1, data1), (year2, data2) in zip(filtered_data.items(), list(filtered_data.items())[1:]):
    # 업종 소분류별 개수 집계
    counts1 = data1['상권업종소분류명'].value_counts()
    counts2 = data2['상권업종소분류명'].value_counts()

    # 평균, 표준편차 계산
    mean1, std1, n1 = counts1.mean(), counts1.std(), len(counts1)
    mean2, std2, n2 = counts2.mean(), counts2.std(), len(counts2)

    # Z-검정 수행
    z_stat, p_value = z_test(mean1, mean2, std1, std2, n1, n2)
    z_test_results[f"{year1} vs {year2}"] = (z_stat, p_value)

# 결과 출력
for comparison, (z_stat, p_value) in z_test_results.items():
    print(f"{comparison} 비교 결과:")
    print(f"  Z-통계량: {z_stat:.2f}, p-value: {p_value:.4f}")
    if p_value < 0.05:
        print("  => 두 집단 간에 유의미한 차이가 있습니다.\n")
    else:
        print("  => 두 집단 간에 유의미한 차이가 없습니다.\n")